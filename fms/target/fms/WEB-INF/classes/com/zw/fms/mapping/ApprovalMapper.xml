<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zw.fms.dao.ApprovalMapper" >

  <resultMap id="BaseResultMap" type="com.zw.fms.model.Approval" >
    <id column="id" property="id" />
    <result column="applyId" property="applyId" />
    <result column="userId" property="userId" />
    <result column="department" property="department" />
    <result column="timestamp" property="timestamp" javaType="java.util.Date" />
    <result column="businessType" property="businessType" />
    <result column="fileType" property="fileType" />
    <result column="name" property="name" />
    <result column="version" property="version" />
    <result column="formId" property="formId" />
    <result column="description" property="description" />
    <result column="status" property="status" />
    <result column="viewStatus" property="viewStatus" />
  </resultMap>

  <cache 
    eviction="FIFO"
    flushInterval="60000"
    size="1024"
    readOnly="true"
    />

  <select id="listApprovals" resultMap="BaseResultMap">
    SELECT * FROM Approval
  </select>
  <select id="listApprovalsByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT * FROM Approval a where 1=1
    <if test="name != null">
        <if test="name != ''">
            and a.name like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
        </if>
    </if>
    <if test="userId != null">
        <if test="userId != ''">
            and a.userId = #{userId,jdbcType=INTEGER}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    order by a.timestamp desc
    <if test="start != null and size != null">
        limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countApprovalsByMap" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT count(*) FROM Approval a where 1=1
    <if test="name != null">
        <if test="name != ''">
            and a.name like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
        </if>
    </if>
    <if test="userId != null">
        <if test="userId != ''">
            and a.userId = #{userId,jdbcType=INTEGER}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
  </select>
  <select id="listApprovalsForReviewByMap" parameterType="java.util.Map" resultMap="BaseResultMap" flushCache="true" useCache="false">
    SELECT a.*, 
           c.employeeNo, c.nickName, c.department, 
           b.userName as reviewerUserName, b.approvalRole as reviewerApprovalRole, b.conclusion as reviewerConclusion, b.status as reviewerStatus, b.timestamp as reviewerTimestamp
    FROM Approval a 
           right join Reviewer b on a.applyId = b.applyId 
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="reviewerUserName != null">
        <if test="reviewerUserName != ''">
            and b.userName = #{reviewerUserName,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="approvalRole != null">
        <if test="approvalRole != ''">
            and b.approvalRole = #{approvalRole,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="reviewerStatusCondition != null">
        <if test="reviewerStatusCondition != ''">
            and b.status ${reviewerStatusCondition}
        </if>
    </if>
    order by b.timestamp desc
    <if test="start != null and size != null">
        limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countApprovalsForReviewByMap" parameterType="java.util.Map" resultType="java.lang.Long" flushCache="true" useCache="false">
    SELECT count(*)
    FROM Approval a 
           right join Reviewer b on a.applyId = b.applyId 
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="reviewerUserName != null">
        <if test="reviewerUserName != ''">
            and b.userName = #{reviewerUserName,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="approvalRole != null">
        <if test="approvalRole != ''">
            and b.approvalRole = #{approvalRole,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="reviewerStatusCondition != null">
        <if test="reviewerStatusCondition != ''">
            and b.status ${reviewerStatusCondition}
        </if>
    </if>
  </select>
  <select id="listApprovalsForViewByMap" parameterType="java.util.Map" resultMap="BaseResultMap" flushCache="true" useCache="false">
    SELECT a.*, 
           c.employeeNo, c.nickName, c.department, 
           b.userName as viewerUserName, b.authRole as viewerAuthRole, b.timestamp as viewerTimestamp
    FROM Approval a 
           right join Auth b on a.applyId = b.applyId
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="viewerUserName != null">
        <if test="viewerUserName != ''">
            and b.userName = #{viewerUserName,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="viewStatus != null">
        <if test="viewStatus != ''">
            and a.viewStatus = #{viewStatus,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="businessTypeCondition != null">
        <if test="businessTypeCondition != ''">
            and a.businessType ${businessTypeCondition}
        </if>
    </if>
    order by b.timestamp desc
    <if test="start != null and size != null">
        limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countApprovalsForViewByMap" parameterType="java.util.Map" resultType="java.lang.Long" flushCache="true" useCache="false">
    SELECT count(*)
    FROM Approval a 
           right join Auth b on a.applyId = b.applyId
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="viewerUserName != null">
        <if test="viewerUserName != ''">
            and b.userName = #{viewerUserName,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="viewStatus != null">
        <if test="viewStatus != ''">
            and a.viewStatus = #{viewStatus,jdbcType=VARCHAR}
        </if>
    </if>
    <if test="businessTypeCondition != null">
        <if test="businessTypeCondition != ''">
            and a.businessType ${businessTypeCondition}
        </if>
    </if>
  </select>
  <select id="listApprovalsForFileByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT * FROM Approval a where 1=1
    <if test="name != null">
        <if test="name != ''">
            and a.name like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
        </if>
    </if>
    <if test="userId != null">
        <if test="userId != ''">
            and a.userId = #{userId,jdbcType=INTEGER}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    order by a.timestamp desc
    <if test="start != null and size != null">
        limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countApprovalsForFileByMap" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT count(*) FROM Approval a where 1=1
    <if test="name != null">
        <if test="name != ''">
            and a.name like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
        </if>
    </if>
    <if test="userId != null">
        <if test="userId != ''">
            and a.userId = #{userId,jdbcType=INTEGER}
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
  </select>
  <select id="listApprovalsForAuthManageByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT a.*, 
           c.employeeNo, c.nickName, c.department
    FROM Approval a
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="businessTypeCondition != null">
        <if test="businessTypeCondition != ''">
            and a.businessType ${businessTypeCondition}
        </if>
    </if>
    order by a.timestamp desc
    <if test="start != null and size != null">
        limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countApprovalsForAuthManageByMap" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT count(*)
    FROM Approval a
           left join User c on a.userId = c.id
    where 1=1
    <if test="name != null">
        <if test="name != ''">
            and ( a.name     like concat('%',trim(#{name,jdbcType=VARCHAR}),'%')
               or c.nickName like concat('%',trim(#{name,jdbcType=VARCHAR}),'%') )
        </if>
    </if>
    <if test="statusCondition != null">
        <if test="statusCondition != ''">
            and a.status ${statusCondition}
        </if>
    </if>
    <if test="businessTypeCondition != null">
        <if test="businessTypeCondition != ''">
            and a.businessType ${businessTypeCondition}
        </if>
    </if>
  </select>
  
  <select id="getApproval" resultMap="BaseResultMap">
    SELECT * FROM Approval WHERE id = #{id}
  </select>
  <select id="getApprovalForReview" resultMap="BaseResultMap">
    SELECT a.*, 
           c.employeeNo, c.nickName, c.department 
    FROM Approval a  
           left join User c on a.userId = c.id
    where a.id = #{id}
  </select>
  <select id="getApprovalForView" resultMap="BaseResultMap">
    SELECT a.*, 
           c.employeeNo, c.nickName, c.department 
    FROM Approval a  
           left join User c on a.userId = c.id
    where a.id = #{id}
  </select>
  <select id="getApprovalByApplyId" resultMap="BaseResultMap">
    SELECT * FROM Approval WHERE applyId = #{applyId}
  </select>
  
  <update id="updateApproval" parameterType="com.zw.fms.model.Approval">
    UPDATE Approval SET applyId = #{applyId}, userId = #{userId}, department = #{department}, timestamp = #{timestamp}, businessType = #{businessType}, fileType = #{fileType}, name = #{name}, version = #{version}, formId = #{formId}, description = #{description}, status = #{status}, viewStatus = #{viewStatus} WHERE id = #{id}
  </update>
  <update id="updateApprovalTimestamp">
    UPDATE Approval SET timestamp = #{timestamp} WHERE id = #{id}
  </update>
  <update id="updateApprovalStatus">
    UPDATE Approval SET status = #{status} WHERE id = #{id}
  </update>
  <update id="updateApprovalViewStatus">
    UPDATE Approval SET viewStatus = #{viewStatus} WHERE applyId = #{applyId}
  </update>
  
  <insert id="insertApproval" parameterType="com.zw.fms.model.Approval">
    INSERT INTO Approval (id, applyId, userId, department, timestamp, businessType, fileType, name, version, formId, description, status, viewStatus) VALUES (null, #{applyId}, #{userId}, #{department}, #{timestamp}, #{businessType}, #{fileType}, #{name}, #{version}, #{formId}, #{description}, #{status}, #{viewStatus})
  </insert>

  <delete id="deleteApprovalById">
    DELETE FROM Approval WHERE id = #{id}
  </delete>
  <delete id="deleteApprovalByApplyId">
    DELETE FROM Approval WHERE applyId = #{applyId}
  </delete>
  
  <delete id="deleteAllApprovals">
    DELETE FROM Approval
  </delete>
  
</mapper>
